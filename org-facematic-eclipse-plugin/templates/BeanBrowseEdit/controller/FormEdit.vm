package ${controllerPackageName};

import javax.inject.Inject;

import org.apache.log4j.Logger;
import org.facematic.core.logging.LoggerFactory;
import org.facematic.core.annotations.FmController;
import org.facematic.core.annotations.FmUI;
import org.facematic.core.annotations.FmView;
import org.facematic.core.annotations.FmReaction;
import org.facematic.core.annotations.FmViewComponent;
import org.facematic.core.mvc.FmBaseController;
import org.facematic.core.producer.FaceProducer;
import org.facematic.core.ui.FacematicUI;
import org.facematic.utils.FacematicBeanUtils;
import org.facematic.utils.FormBinder;

import com.vaadin.data.fieldgroup.FieldGroup.CommitException;
import com.vaadin.data.fieldgroup.PropertyId;
import com.vaadin.ui.Button.ClickEvent;
import com.vaadin.ui.Notification;
import com.vaadin.ui.TextField;
import com.vaadin.ui.FormLayout;
import com.vaadin.ui.Button;
import com.vaadin.ui.VerticalLayout;

import ${className};

/**
 *
 */
@FmView(name = "${editViewQualifiedName}")
public class ${editFormSimpleName} implements FmBaseController {
	private static final Logger logger = LoggerFactory.getLogger(${editFormSimpleName}.class);
	
	protected FormBinder binder;  

	@Inject
	@FmUI
	protected FacematicUI ui;
	
${editorContollerFields}
	
    @FmViewComponent(name="form")
    protected FormLayout form;

    @FmViewComponent(name="buttonSave")
    protected Button buttonSave;

    @FmViewComponent(name="buttonDelete")
    protected Button buttonDelete;

    @FmViewComponent(name="view")
    protected VerticalLayout view;
    
    @FmController
    protected ${controllerSimpleName} parent;



    /**
     *
     */
	@Override
	public void prepareContext(FaceProducer producer) {
	}

    /**
     *
     */
	@Override
	public void init() {
        binder = new FormBinder (this);
		binder.bind (newEmptyBean ());
	}
	
    /**
     *
     */
	protected ${classSimpleName} newEmptyBean () {
		${classSimpleName} instance = new ${classSimpleName} ();
		FacematicBeanUtils.emptyBean(instance);
		return instance;
	}

    /**
     *
     */
	public void bind (${classSimpleName} bean) {
		if (bean == null) {
			bean = newEmptyBean();
		}
		binder.bind (bean);
	}

    /**
     *
     */
	@FmReaction("Button.onClick")
	public void save(ClickEvent event) {
		if (!binder.isValid()) {
			ui.showNotification("Entered data is invalid", Notification.Type.ERROR_MESSAGE);
			return;
		}
		
		try {
			binder.commit ();
			doSaveAction  ();
		} catch (CommitException e) {
			ui.showNotification("Can't commit data", Notification.Type.ERROR_MESSAGE);
		}
	}

    /**
     *
     */
	protected void doSaveAction() {
	   parent.update ((${classSimpleName}) binder.getBean());
	}

    /**
     *
     */
    @FmReaction("Button#buttonDelete.onClick")
    public void delete (ClickEvent event) {
        parent.delete((${classSimpleName})binder.getBean()); 
        binder.bind (newEmptyBean ());
    }
}
